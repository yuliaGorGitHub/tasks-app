{"version":3,"sources":["models/Task.js","components/Modal.js","components/TaskComponent.js","components/TasksList.js","images/BEUGBRe.jpg","App.js","reportWebVitals.js","index.js"],"names":["Task","taskStrOrObject","status","arguments","length","this","task","console","log","Modal","handleClose","show","children","showHideClassName","className","type","onClick","TaskCompnent","props","myStyle","ind","editStatus","deleteTask","useState","showModal","setShowModal","color","textDecoration","name","checked","style","TasksList","displayTasks","taskData","changeTaskData","readData","setReadData","input","setInput","setInputValue","displayStatus","setDisplayStatus","taskList","editTaskStatus","id","newStatus","newData","deleteTheTask","splice","onKeyUp","e","charCode","target","value","taskDescr","newTask","concat","addNewTask","useEffect","map","curtask","index","placeholder","onChange","onKeyPress","reduce","counter","App","backgroundImage","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAqBeA,EAnBX,WAAaC,EAAiBC,GAC7B,oBAC2B,IAArBC,UAAUC,QAA2C,kBAApBH,GAEzCI,KAAKC,KAAOL,EAAgBK,KAC5BD,KAAKH,OAASD,EAAgBC,QAEK,IAArBC,UAAUC,QAExBC,KAAKC,KAAOL,EACZI,KAAKH,OAASA,GAKdK,QAAQC,IAAI,sCCAAC,G,YAfD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC5BC,EAAoBF,EAAO,sBAAwB,qBAEzD,OACE,qBAAKG,UAAWD,EAAhB,SACE,0BAASC,UAAU,aAAnB,UACE,4BAAIF,IACJ,wBAAQG,KAAK,SAASC,QAASN,EAA/B,0BCsCOO,MAxCf,SAAuBC,GACtB,IAmBOC,EAlBGb,EAA2CY,EAA3CZ,KAAMc,EAAqCF,EAArCE,IAAKC,EAAgCH,EAAhCG,WAAYC,EAAoBJ,EAApBI,WAAYX,EAAQO,EAARP,KAD9C,EAEsCY,oBAAS,GAF/C,mBAEWC,EAFX,KAEsBC,EAFtB,KAiBUZ,EAXW,QAATF,GAEc,cAATA,IAAwC,IAAhBL,EAAKJ,QAGpB,WAATS,IAAqC,IAAhBL,EAAKJ,OAJxB,6BAOA,4BAgBf,OAVgBiB,EAAfb,EAAKJ,OAAoB,CAACwB,MAAO,UAAWC,eAAgB,gBAA6B,CAACD,MAAO,SAW9F,sBAAKZ,UAAWD,EAAoBe,KAAMR,EAA1C,UACI,uBAAOL,KAAK,WAAWc,QAASvB,EAAKJ,OAAQc,QAAS,kBAAMK,EAAWD,MACvE,mBAAGU,MAAOX,EAAV,SAAoBb,EAAKA,OACzB,qBAAKQ,UAAU,QAAQE,QAZ/B,WAEQV,EAAKJ,OACLoB,EAAWF,GAEXK,GAAcD,IAOd,eACA,cAAC,EAAD,CAAOb,KAAMa,EAAWd,YAAa,kBAAMe,GAAcD,IAAaZ,SAAS,2C,MCuD5EmB,MA7Ff,WAAuB,IA4DfC,EA5Dc,EACiBT,mBAAS,IAD1B,mBACXU,EADW,KACDC,EADC,OAEcX,oBAAS,GAFvB,mBAEXY,EAFW,KAEDC,EAFC,OAGOb,mBAAS,IAHhB,mBAGXc,EAHW,KAGLC,EAHK,OAIiBf,mBAAS,IAJ1B,mBAIAgB,GAJA,aAKyBhB,mBAAS,OALlC,mBAKViB,EALU,KAKKC,EALL,KAOZC,EAAW,CACb,IAAI1C,EAAK,YAAY,GACrB,IAAIA,EAAK,eAAe,GACxB,IAAIA,EAAK,mBAAmB,GAC5B,IAAIA,EAAK,gBAAgB,GACzB,IAAIA,EAAK,oBAAmB,IAShC,SAAS2C,EAAeC,GAEpB,IAAMC,GAAaZ,EAASW,GAAI1C,OAC1B4C,EAAO,YAAQb,GACrBa,EAAQF,GAAI1C,OAAS2C,EACrBX,EAAeY,GAGnB,SAASC,EAAcH,GAGnB,GADmBX,EAASW,GAAI1C,OAEhC,CACI,IAAM4C,EAAO,YAAQb,GACPa,EAAQE,OAAOJ,EAAI,GACjCV,EAAeY,IAiBvB,SAASG,EAAQC,GACM,KAAfA,EAAEC,WACFZ,EAAcW,EAAEE,OAAOC,OAf/B,SAAoBC,GAEhB,IAAMC,EAAU,IAAIvD,EAAMsD,GAAU,GACpCpB,EAAeD,EAASuB,OAAOD,IAC/BjB,EAAS,IAYLmB,CAAWP,EAAEE,OAAOC,QAc5B,OAvDAK,qBAAU,WACNxB,EAAeQ,GACfN,GAAY,KACZ,IA2CCD,IAEFH,EAAeC,EAAS0B,KAAI,SAACC,EAAQC,GAAT,OAAmB,cAAC,EAAD,CAA0BzC,IAAKyC,EAAOlD,KAAM6B,EACrElC,KAAMsD,EAASvC,WAAYsB,EAAgBrB,WAAYyB,GADXc,OAQjE,mCACI,sBAAK/C,UAAU,0BAAf,UACI,oBAAIgB,MAAO,CAACJ,MAAQ,SAApB,oBACA,uBAAOX,KAAK,OAAOsC,MAAOhB,EAAOyB,YAAY,eAAeC,SAAU,SAACb,GAAD,OAAKZ,EAASY,EAAEE,OAAOC,QAAQW,WAAY,SAAAd,GAAC,OAAED,EAAQC,MAE5H,qBAAKpC,UAAU,QAAf,SACKkB,IAIL,sBAAKlB,UAAU,aAAf,UAA4B,uBAAMA,UAAU,QAAhB,cA/B7BmB,EAASgC,QAAO,SAACC,EAAD,UAAoC,IAApC,EAAYhE,OAAgCgE,GAAW,EAAIA,IAAS,GA+BvD,kBACxB,uBAAOnD,KAAK,QAAQsC,MAAM,MAAMzB,KAAK,cAAcC,QAA2B,QAAlBW,EAAyBuB,SAAU,SAAAb,GAAC,OAAET,EAAiBS,EAAEE,OAAOC,UADhI,uBAEI,uBAAOtC,KAAK,QAAQsC,MAAM,SAASzB,KAAK,cAAcC,QAA2B,WAAlBW,EAA4BuB,SAAU,SAAAb,GAAC,OAAET,EAAiBS,EAAEE,OAAOC,UAFtI,0BAGI,uBAAOtC,KAAK,QAAQsC,MAAM,YAAYzB,KAAK,cAAcC,QAA2B,cAAlBW,EAA+BuB,SAAU,SAAAb,GAAC,OAAET,EAAiBS,EAAEE,OAAOC,UAH5I,sBCtFD,MAA0B,oCCc1Bc,MARf,WACE,OACE,qBAAKrD,UAAU,MAAMgB,MAAO,CAAEsC,gBAAgB,OAAD,OAASC,EAAT,MAA7C,SACI,cAAC,EAAD,OCGOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f7160b38.chunk.js","sourcesContent":["\r\nclass Task {\r\n    constructor (taskStrOrObject, status)\r\n    {\r\n        if(arguments.length === 1 && typeof taskStrOrObject === 'object') \r\n        {\r\n\t\t\tthis.task = taskStrOrObject.task;\r\n\t\t\tthis.status = taskStrOrObject.status;            \r\n        }\r\n        else if (arguments.length === 2)\r\n\t\t{\r\n\t\t\tthis.task = taskStrOrObject;\r\n\t\t\tthis.status = status;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\t// error\r\n\t\t\tconsole.log(\"Throw exception bad task creation\");\r\n\t\t}\r\n    }\r\n}\r\nexport default Task;","import './Modal.css';\r\n\r\nconst Modal = ({ handleClose, show, children }) => {\r\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className=\"modal-main\">\r\n        <p>{children}</p>\r\n        <button type=\"button\" onClick={handleClose}>\r\n          Close\r\n        </button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;","\r\nimport \"./TaskComponent.css\"\r\nimport React from 'react'\r\nimport {  useState } from 'react';\r\nimport Modal from './Modal.js';\r\n\r\n\r\nfunction TaskCompnent (props)\r\n{\r\n    const {task, ind, editStatus, deleteTask, show} = props;\r\n    const [showModal, setShowModal] = useState(false);\r\n    \r\n    function showHideBySelect ()\r\n    {\r\n        if (show === \"all\")\r\n            return \"c-task c-row display-block\";\r\n        else if (show === \"completed\" && task.status === true)\r\n            return \"c-task c-row display-block\";\r\n        \r\n        else if (show === \"active\" && task.status === false)\r\n            return \"c-task c-row display-block\";\r\n        else \r\n            return \"c-task c-row display-none\";\r\n\r\n    }\r\n    const showHideClassName = showHideBySelect();\r\n\r\n    let myStyle;\r\n    (task.status) ? myStyle = {color: '#B9B7BD', textDecoration: 'line-through' } : myStyle = {color: 'black'} \r\n\r\n    function handleModal ()\r\n    {\r\n        if (task.status) \r\n            deleteTask(ind);  \r\n        else  \r\n            setShowModal(!showModal);       \r\n    }\r\n\r\n    return (\r\n        <div className={showHideClassName}  name={ind}>\r\n            <input type=\"checkbox\" checked={task.status} onClick={() => editStatus(ind)}></input>\r\n            <p style={myStyle}>{task.task}</p>\r\n            <div className=\"click\" onClick={handleModal}>x</div>\r\n            <Modal show={showModal} handleClose={() => setShowModal(!showModal)}  children=\"Uncompleted task cannot be deleted\"/>\r\n        </div>\r\n    )\r\n}\r\nexport default TaskCompnent;","import Task from \"../models/Task\";\r\nimport TaskCompnent from \"./TaskComponent\";\r\nimport \"./TasksList.css\";\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction TasksList () {\r\n    const [taskData, changeTaskData] = useState([]);\r\n    const [readData, setReadData] = useState(true);\r\n    const [input,setInput] = useState(\"\");\r\n    const [inputValue,setInputValue] = useState(\"\");\r\n     const [displayStatus, setDisplayStatus] = useState(\"all\");\r\n    \r\n    const taskList = [ \r\n        new Task(\"buy milk\", true),\r\n        new Task(\"call to dad\", false), \r\n        new Task(\"to do home work\", false) ,\r\n        new Task(\"feed the cat\", true), \r\n        new Task(\"To water flowers\",false)   \r\n    ]\r\n\r\n    useEffect(() => {\r\n        changeTaskData(taskList);   \r\n        setReadData(false);\r\n      },[] );\r\n\r\n\r\n    function editTaskStatus(id) \r\n    {\r\n        const newStatus = !taskData[id].status;\r\n        const newData = [... taskData];\r\n        newData[id].status = newStatus;\r\n        changeTaskData(newData);  \r\n    }\r\n\r\n    function deleteTheTask(id) \r\n    {\r\n        const taskStatus = taskData[id].status;\r\n        if (taskStatus)\r\n        {\r\n            const newData = [... taskData];\r\n            let removed = newData.splice(id, 1)\r\n            changeTaskData(newData);  \r\n        }\r\n    }\r\n\r\n    function addNewTask(taskDescr) \r\n    {\r\n        const newTask = new Task (taskDescr,false);\r\n        changeTaskData(taskData.concat(newTask)); \r\n        setInput(\"\");\r\n\r\n    }\r\n\r\n    function getNumberNotCompleted()\r\n    {\r\n        return taskData.reduce((counter, { status }) => status === false ? counter += 1 : counter, 0); \r\n    }\r\n\r\n    function onKeyUp(e) {\r\n        if (e.charCode === 13) {\r\n            setInputValue(e.target.value);\r\n            addNewTask(e.target.value);\r\n        }\r\n      }\r\n\r\n    let displayTasks;\r\n    if (!readData)\r\n    { \r\n       displayTasks = taskData.map((curtask,index) => <TaskCompnent key={index} ind={index} show={displayStatus}\r\n                             task={curtask} editStatus={editTaskStatus} deleteTask={deleteTheTask}/>);\r\n    }\r\n    else {\r\n        <p>No data</p>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"c-lst position-relative\">\r\n                <h1 style={{color : 'white'}}> Todos</h1>\r\n                <input type=\"text\" value={input} placeholder=\"What's next?\" onChange={(e)=>setInput(e.target.value)} onKeyPress={e=>onKeyUp(e)}/>\r\n\r\n                <div className=\"table\">  \r\n                    {displayTasks}\r\n                </div>\r\n\r\n\r\n                <div className=\"fix-buttom\"><span className=\"space\"> {getNumberNotCompleted()} items left </span>                \r\n                    <input type=\"radio\" value=\"all\" name=\"dispTaskLst\" checked={displayStatus === \"all\"} onChange={e=>setDisplayStatus(e.target.value)}/> All&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <input type=\"radio\" value=\"active\" name=\"dispTaskLst\" checked={displayStatus === \"active\"} onChange={e=>setDisplayStatus(e.target.value)}/> Active&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <input type=\"radio\" value=\"completed\" name=\"dispTaskLst\" checked={displayStatus === \"completed\"} onChange={e=>setDisplayStatus(e.target.value)}/> Completed\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n};\r\nexport default TasksList; \r\n","export default __webpack_public_path__ + \"static/media/BEUGBRe.bcab4b8b.jpg\";","\nimport './App.css';\nimport TasksList from './components/TasksList';\nimport React from 'react';\nimport background from \"./images/BEUGBRe.jpg\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ backgroundImage: `url(${background})` }}>\n        <TasksList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}